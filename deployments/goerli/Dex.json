{
  "address": "0x783E07CbC347F10D78c1e43f46C8C6631eE7D3C5",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "buyDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3b56299072ab3446734bc873c5a8b0b174337b4b48715539f8f9340fc02a9365",
  "receipt": {
    "to": null,
    "from": "0x7FCfA189672E7511106B6ff025d55250EEF3f9ef",
    "contractAddress": "0x783E07CbC347F10D78c1e43f46C8C6631eE7D3C5",
    "transactionIndex": 64,
    "gasUsed": "939952",
    "logsBloom": "0x
    "blockHash": "0x60934d8c4d71e580bed7cc68c18f548a832387a9a63acee00dd08cf2b333dfad",
    "transactionHash": "0x3b56299072ab3446734bc873c5a8b0b174337b4b48715539f8f9340fc02a9365",
    "logs": [],
    "blockNumber": 8303952,
    "cumulativeGasUsed": "8678117",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "698876b60b8f22ffccbf130844bfd25a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x17894e217eb1056c22fbdaf8317a04f31b27e840455f075222d202acfcbf793d\",\"license\":\"AGPL-3.0\"},\"contracts/Dex.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport {IERC20} from '@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol';\\n\\ncontract Dex {\\n    address payable public owner;\\n\\n    // Aave ERC20 Token addresses on Goerli network\\n    address constant DAI_ADDRESS = 0xDF1742fE5b0bFc12331D8EAec6b478DfDbD31464;\\n    address constant USDC_ADDRESS = 0xA2025B15a1757311bfD68cb14eaeFCc237AF5b43;\\n\\n    IERC20 private immutable i_dai;\\n    IERC20 private immutable i_usdc;\\n\\n    // exchange rate indexes\\n    uint256 dexARate = 90;\\n    uint256 dexBRate = 100;\\n\\n    // keeps track of individuals' dai balances\\n    mapping(address => uint256) private s_daiBalances;\\n\\n    // keeps track of individuals' USDC balances\\n    mapping(address => uint256) private s_usdcBalances;\\n\\n    constructor() {\\n        owner = payable(msg.sender);\\n        i_dai = IERC20(DAI_ADDRESS);\\n        i_usdc = IERC20(USDC_ADDRESS);\\n    }\\n\\n    function depositUSDC(uint256 _amount) external {\\n        s_usdcBalances[msg.sender] += _amount;\\n        uint256 allowance = i_usdc.allowance(msg.sender, address(this));\\n        require(allowance >= _amount, 'Check the token allowance');\\n        i_usdc.transferFrom(msg.sender, address(this), _amount);\\n    }\\n\\n    function depositDAI(uint256 _amount) external {\\n        s_daiBalances[msg.sender] += _amount;\\n        uint256 allowance = i_dai.allowance(msg.sender, address(this));\\n        require(allowance >= _amount, 'Check the token allowance');\\n        i_dai.transferFrom(msg.sender, address(this), _amount);\\n    }\\n\\n    function buyDAI() external {\\n        uint256 daiToReceive = ((s_usdcBalances[msg.sender] / dexARate) * 100) *\\n            (10 ** 12);\\n        i_dai.transfer(msg.sender, daiToReceive);\\n    }\\n\\n    function sellDAI() external {\\n        uint256 usdcToReceive = ((s_daiBalances[msg.sender] * dexBRate) / 100) /\\n            (10 ** 12);\\n        i_usdc.transfer(msg.sender, usdcToReceive);\\n    }\\n\\n    function getBalance(address _tokenAddress) external view returns (uint256) {\\n        return IERC20(_tokenAddress).balanceOf(address(this));\\n    }\\n\\n    function withdraw(address _tokenAddress) external onlyOwner {\\n        IERC20 token = IERC20(_tokenAddress);\\n        token.transfer(msg.sender, token.balanceOf(address(this)));\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            msg.sender == owner,\\n            'Only the contract owner can call this function'\\n        );\\n        _;\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xe74d8fdc509216ace79e618c9b326d42fc47a6aa3648fe6322793fcc6337676a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c0604052605a600155606460025534801561001a57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073df1742fe5b0bfc12331d8eaec6b478dfdbd3146473ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505073a2025b15a1757311bfd68cb14eaefcc237af5b4373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060805160a051610ed861012c6000396000818161030f0152818161079a015261087b0152600081816102000152818161040901526104ea0152610ed86000f3fe6080604052600436106100745760003560e01c806351cff8d91161004e57806351cff8d9146100d75780638da5cb5b14610100578063f688bcfb1461012b578063f8b2cb4f146101545761007b565b806305abf904146100805780631560299114610097578063365833e1146100ae5761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b50610095610191565b005b3480156100a357600080fd5b506100ac6102a0565b005b3480156100ba57600080fd5b506100d560048036038101906100d091906109dc565b6103af565b005b3480156100e357600080fd5b506100fe60048036038101906100f99190610a67565b61058d565b005b34801561010c57600080fd5b5061011561071c565b6040516101229190610ab5565b60405180910390f35b34801561013757600080fd5b50610152600480360381019061014d91906109dc565b610740565b005b34801561016057600080fd5b5061017b60048036038101906101769190610a67565b61091e565b6040516101889190610adf565b60405180910390f35b600064e8d4a510006064600154600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101e89190610b58565b6101f29190610b89565b6101fc9190610b89565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610259929190610bf2565b6020604051808303816000875af1158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190610c53565b5050565b600064e8d4a510006064600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102f79190610b89565b6103019190610b58565b61030b9190610b58565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610368929190610bf2565b6020604051808303816000875af1158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190610c53565b5050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103fe9190610c80565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610462929190610cd6565b602060405180830381865afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190610d14565b9050818110156104e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104df90610d9e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161054593929190610dbe565b6020604051808303816000875af1158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610c53565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290610e67565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106769190610e87565b602060405180830381865afa158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190610d14565b6040518363ffffffff1660e01b81526004016106d4929190610bf2565b6020604051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190610c53565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078f9190610c80565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016107f3929190610cd6565b602060405180830381865afa158015610810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108349190610d14565b905081811015610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090610d9e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016108d693929190610dbe565b6020604051808303816000875af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190610c53565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109599190610e87565b602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190610d14565b9050919050565b600080fd5b6000819050919050565b6109b9816109a6565b81146109c457600080fd5b50565b6000813590506109d6816109b0565b92915050565b6000602082840312156109f2576109f16109a1565b5b6000610a00848285016109c7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3482610a09565b9050919050565b610a4481610a29565b8114610a4f57600080fd5b50565b600081359050610a6181610a3b565b92915050565b600060208284031215610a7d57610a7c6109a1565b5b6000610a8b84828501610a52565b91505092915050565b6000610a9f82610a09565b9050919050565b610aaf81610a94565b82525050565b6000602082019050610aca6000830184610aa6565b92915050565b610ad9816109a6565b82525050565b6000602082019050610af46000830184610ad0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b63826109a6565b9150610b6e836109a6565b925082610b7e57610b7d610afa565b5b828204905092915050565b6000610b94826109a6565b9150610b9f836109a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd857610bd7610b29565b5b828202905092915050565b610bec81610a29565b82525050565b6000604082019050610c076000830185610be3565b610c146020830184610ad0565b9392505050565b60008115159050919050565b610c3081610c1b565b8114610c3b57600080fd5b50565b600081519050610c4d81610c27565b92915050565b600060208284031215610c6957610c686109a1565b5b6000610c7784828501610c3e565b91505092915050565b6000610c8b826109a6565b9150610c96836109a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ccb57610cca610b29565b5b828201905092915050565b6000604082019050610ceb6000830185610be3565b610cf86020830184610be3565b9392505050565b600081519050610d0e816109b0565b92915050565b600060208284031215610d2a57610d296109a1565b5b6000610d3884828501610cff565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610d88601983610d41565b9150610d9382610d52565b602082019050919050565b60006020820190508181036000830152610db781610d7b565b9050919050565b6000606082019050610dd36000830186610be3565b610de06020830185610be3565b610ded6040830184610ad0565b949350505050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610e51602e83610d41565b9150610e5c82610df5565b604082019050919050565b60006020820190508181036000830152610e8081610e44565b9050919050565b6000602082019050610e9c6000830184610be3565b9291505056fea2646970667358221220765429c0977638c55752ece08904b11845f546401feb3fba0c0dfd85481bacf064736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c806351cff8d91161004e57806351cff8d9146100d75780638da5cb5b14610100578063f688bcfb1461012b578063f8b2cb4f146101545761007b565b806305abf904146100805780631560299114610097578063365833e1146100ae5761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b50610095610191565b005b3480156100a357600080fd5b506100ac6102a0565b005b3480156100ba57600080fd5b506100d560048036038101906100d091906109dc565b6103af565b005b3480156100e357600080fd5b506100fe60048036038101906100f99190610a67565b61058d565b005b34801561010c57600080fd5b5061011561071c565b6040516101229190610ab5565b60405180910390f35b34801561013757600080fd5b50610152600480360381019061014d91906109dc565b610740565b005b34801561016057600080fd5b5061017b60048036038101906101769190610a67565b61091e565b6040516101889190610adf565b60405180910390f35b600064e8d4a510006064600154600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101e89190610b58565b6101f29190610b89565b6101fc9190610b89565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610259929190610bf2565b6020604051808303816000875af1158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190610c53565b5050565b600064e8d4a510006064600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102f79190610b89565b6103019190610b58565b61030b9190610b58565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610368929190610bf2565b6020604051808303816000875af1158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190610c53565b5050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103fe9190610c80565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610462929190610cd6565b602060405180830381865afa15801561047f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a39190610d14565b9050818110156104e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104df90610d9e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161054593929190610dbe565b6020604051808303816000875af1158015610564573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105889190610c53565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061290610e67565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106769190610e87565b602060405180830381865afa158015610693573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b79190610d14565b6040518363ffffffff1660e01b81526004016106d4929190610bf2565b6020604051808303816000875af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190610c53565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078f9190610c80565b9250508190555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016107f3929190610cd6565b602060405180830381865afa158015610810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108349190610d14565b905081811015610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090610d9e565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016108d693929190610dbe565b6020604051808303816000875af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190610c53565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109599190610e87565b602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190610d14565b9050919050565b600080fd5b6000819050919050565b6109b9816109a6565b81146109c457600080fd5b50565b6000813590506109d6816109b0565b92915050565b6000602082840312156109f2576109f16109a1565b5b6000610a00848285016109c7565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3482610a09565b9050919050565b610a4481610a29565b8114610a4f57600080fd5b50565b600081359050610a6181610a3b565b92915050565b600060208284031215610a7d57610a7c6109a1565b5b6000610a8b84828501610a52565b91505092915050565b6000610a9f82610a09565b9050919050565b610aaf81610a94565b82525050565b6000602082019050610aca6000830184610aa6565b92915050565b610ad9816109a6565b82525050565b6000602082019050610af46000830184610ad0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b63826109a6565b9150610b6e836109a6565b925082610b7e57610b7d610afa565b5b828204905092915050565b6000610b94826109a6565b9150610b9f836109a6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd857610bd7610b29565b5b828202905092915050565b610bec81610a29565b82525050565b6000604082019050610c076000830185610be3565b610c146020830184610ad0565b9392505050565b60008115159050919050565b610c3081610c1b565b8114610c3b57600080fd5b50565b600081519050610c4d81610c27565b92915050565b600060208284031215610c6957610c686109a1565b5b6000610c7784828501610c3e565b91505092915050565b6000610c8b826109a6565b9150610c96836109a6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ccb57610cca610b29565b5b828201905092915050565b6000604082019050610ceb6000830185610be3565b610cf86020830184610be3565b9392505050565b600081519050610d0e816109b0565b92915050565b600060208284031215610d2a57610d296109a1565b5b6000610d3884828501610cff565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610d88601983610d41565b9150610d9382610d52565b602082019050919050565b60006020820190508181036000830152610db781610d7b565b9050919050565b6000606082019050610dd36000830186610be3565b610de06020830185610be3565b610ded6040830184610ad0565b949350505050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610e51602e83610d41565b9150610e5c82610df5565b604082019050919050565b60006020820190508181036000830152610e8081610e44565b9050919050565b6000602082019050610e9c6000830184610be3565b9291505056fea2646970667358221220765429c0977638c55752ece08904b11845f546401feb3fba0c0dfd85481bacf064736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1358,
        "contract": "contracts/Dex.sol:Dex",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 1373,
        "contract": "contracts/Dex.sol:Dex",
        "label": "dexARate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1376,
        "contract": "contracts/Dex.sol:Dex",
        "label": "dexBRate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1380,
        "contract": "contracts/Dex.sol:Dex",
        "label": "s_daiBalances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1384,
        "contract": "contracts/Dex.sol:Dex",
        "label": "s_usdcBalances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}